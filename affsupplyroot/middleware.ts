import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";

// Danh s√°ch route c·∫ßn b·∫£o v·ªá
const protectedPaths = ["/dashboard", "/profile", "/orders"];

export function middleware(req: NextRequest) {
  // L·∫•y token t·ª´ cookie
  const token = req.cookies.get("token")?.value;
  console.log("üî• Middleware ch·∫°y | Token:", token);
  
  // L·∫•y path hi·ªán t·∫°i
  const pathname = req.nextUrl.pathname;

  // Ki·ªÉm tra n·∫øu path hi·ªán t·∫°i n·∫±m trong protectedPaths
  const isProtected = protectedPaths.some(
    (path) => pathname === path || pathname.startsWith(path + "/")
  );

  if (isProtected && !token) {
    // Redirect v·ªÅ trang login n·∫øu ch∆∞a c√≥ token
    return NextResponse.redirect(new URL("/authentication", req.url));
  }

  // N·∫øu c√≥ token ho·∫∑c kh√¥ng ph·∫£i route b·∫£o v·ªá, ti·∫øp t·ª•c
  return NextResponse.next();
}

// Matcher ƒë·ªÉ middleware ch·ªâ ch·∫°y v·ªõi c√°c route n√†y
export const config = {
  matcher: [
    "/dashboard",
    "/dashboard/:path*",
    "/profile",
    "/profile/:path*",
    "/orders",
    "/orders/:path*",
  ],
};
